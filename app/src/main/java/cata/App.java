/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cata;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import cata.RomanNumeralsConverter;

public class App {


    public static void main(String[] args) throws Exception {
        String inputString = "";
        try {
            BufferedReader reader = new BufferedReader(
                    new InputStreamReader(System.in));
            
            inputString = reader.readLine();
            
            
        } catch (IOException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String[] parts = inputString.split(" ");
        
        if(parts.length < 3 || parts.length > 3){
            throw new Exception("Неправильный формат строки");
        }
        
        boolean itsRomeFirst = false;
        if(parts[0].contains("I") || parts[0].contains("V") || parts[0].contains("X")){
            itsRomeFirst = true;
        }
        
        boolean itsRomeSecond = false;
        if(parts[2].contains("I") || parts[2].contains("V") || parts[2].contains("X")){
            itsRomeSecond = true;
        }
        
        if(itsRomeSecond != itsRomeFirst){
            throw new Exception("Обе цифры должны быть либо римскими либо арабскими");
        }
        
        if(!itsRomeFirst){
            int firtsNumber = Integer.parseInt(parts[0]);
            int secondNumber = Integer.parseInt(parts[2]);
            if(firtsNumber > 10 || secondNumber > 10){
                throw new Exception("Числа могут быть не больше 10");
            }
            if(parts[1].equals("+")){
                System.out.println(firtsNumber + secondNumber);
            }else if(parts[1].equals("-")){
                System.out.println(firtsNumber - secondNumber);
            }else if(parts[1].equals("/")){
                System.out.println(firtsNumber / secondNumber);
            }else {
                 throw new Exception("Неверный оператор");
            }
        }else{
            RomanNumeralsConverter converter = new RomanNumeralsConverter();
            Integer firtsNumber = converter.convertRomanNumeralsToInteger(parts[0]);
            Integer secondNumber = converter.convertRomanNumeralsToInteger(parts[2]);
            if(firtsNumber > 10 || secondNumber > 10){
                throw new Exception("Числа могут быть не больше 10");
            }
            if(parts[1].equals("+")){
                System.out.println(converter.convertIntegerToRomanNumerals(firtsNumber + secondNumber));
            }else if(parts[1].equals("-")){
                if((firtsNumber - secondNumber) <= 0){
                    throw new Exception("Римские цифры не могут быть отрицательными");
                }
                System.out.println(converter.convertIntegerToRomanNumerals(firtsNumber - secondNumber));
            }else if(parts[1].equals("/")){
                System.out.println(converter.convertIntegerToRomanNumerals(firtsNumber / secondNumber));
            }else {
                 throw new Exception("Неверный оператор");
            }
        }
    }
}
